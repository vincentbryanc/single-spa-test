{"version":3,"sources":["../src/single-spa-angularjs.js"],"names":["defaultOpts","angular","domElementGetter","mainAngularModule","uiRouter","preserveGlobal","elementId","strictDi","template","undefined","singleSpaAngularJS","userOpts","Error","opts","mountedInstances","bootstrap","bind","mount","unmount","Promise","resolve","props","then","window","containerEl","getContainerEl","bootstrapEl","document","createElement","id","appendChild","uiViewEl","setAttribute","innerHTML","instance","get","singleSpaProps","reject","$destroy","setTimeout","element","htmlId","name","appName","getElementById","body"],"mappings":"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","sourcesContent":["const defaultOpts = {\n  // required opts\n  angular: null,\n  domElementGetter: null,\n  mainAngularModule: null,\n\n  // optional opts\n  uiRouter: false,\n  preserveGlobal: false,\n  elementId: \"__single_spa_angular_1\",\n  strictDi: false,\n  template: undefined,\n};\n\nexport default function singleSpaAngularJS(userOpts) {\n  if (typeof userOpts !== \"object\") {\n    throw new Error(`single-spa-angularjs requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.angular) {\n    throw new Error(`single-spa-angularjs must be passed opts.angular`);\n  }\n\n  if (opts.domElementGetter && typeof opts.domElementGetter !== \"function\") {\n    throw new Error(\n      `single-spa-angularjs opts.domElementGetter must be a function`\n    );\n  }\n\n  if (!opts.mainAngularModule) {\n    throw new Error(\n      `single-spa-angularjs must be passed opts.mainAngularModule string`\n    );\n  }\n\n  // A shared object to store mounted object state\n  const mountedInstances = {};\n\n  return {\n    bootstrap: bootstrap.bind(null, opts, mountedInstances),\n    mount: mount.bind(null, opts, mountedInstances),\n    unmount: unmount.bind(null, opts, mountedInstances),\n  };\n}\n\nfunction bootstrap(opts) {\n  return Promise.resolve();\n}\n\nfunction mount(opts, mountedInstances, props = {}) {\n  return Promise.resolve().then(() => {\n    window.angular = opts.angular;\n\n    const containerEl = getContainerEl(opts, props);\n    const bootstrapEl = document.createElement(\"div\");\n    bootstrapEl.id = opts.elementId;\n\n    containerEl.appendChild(bootstrapEl);\n\n    if (opts.uiRouter) {\n      const uiViewEl = document.createElement(\"div\");\n      uiViewEl.setAttribute(\n        \"ui-view\",\n        opts.uiRouter === true ? \"\" : opts.uiRouter\n      );\n      bootstrapEl.appendChild(uiViewEl);\n    }\n\n    if (opts.template) {\n      bootstrapEl.innerHTML = opts.template;\n    }\n\n    if (opts.strictDi) {\n      mountedInstances.instance = opts.angular.bootstrap(\n        bootstrapEl,\n        [opts.mainAngularModule],\n        { strictDi: opts.strictDi }\n      );\n    } else {\n      mountedInstances.instance = opts.angular.bootstrap(bootstrapEl, [\n        opts.mainAngularModule,\n      ]);\n    }\n\n    mountedInstances.instance.get(\"$rootScope\").singleSpaProps = props;\n  });\n}\n\nfunction unmount(opts, mountedInstances, props = {}) {\n  return new Promise((resolve, reject) => {\n    mountedInstances.instance.get(\"$rootScope\").$destroy();\n    getContainerEl(opts, props).innerHTML = \"\";\n\n    if (opts.angular === window.angular && !opts.preserveGlobal)\n      delete window.angular;\n\n    setTimeout(resolve);\n  });\n}\n\nfunction getContainerEl(opts, props) {\n  let element;\n  if (opts.domElementGetter) {\n    element = opts.domElementGetter(props);\n  } else {\n    const htmlId = `single-spa-application:${props.name || props.appName}`;\n    element = document.getElementById(htmlId);\n    if (!element) {\n      element = document.createElement(\"div\");\n      element.id = htmlId;\n      document.body.appendChild(element);\n    }\n  }\n\n  if (!element) {\n    throw new Error(`domElementGetter did not return a valid dom element`);\n  }\n\n  return element;\n}\n"],"file":"single-spa-angularjs.js"}